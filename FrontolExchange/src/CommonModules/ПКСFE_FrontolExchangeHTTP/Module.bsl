Функция FEServerInfo() Экспорт
	
	СтруктураДанных = Новый Структура;
	
	СтруктураДанных.Вставить("data", "Соединение с сервером установлено! ");  
	
	Возврат ПодготовитьОтветJSON(СтруктураДанных);

КонецФункции

Функция ПодготовитьОтветJSON(СтруктураДанных = Неопределено, СтруктураОписанияОшибки = Неопределено)
	
	Ответ = Новый Массив;
		
	СтруктураОшибок = Новый Структура;
	
	Если СтруктураОписанияОшибки = Неопределено Тогда	
				
		Ответ = СтруктураДанных;
		
	Иначе
		  
		СтруктураОшибок.Вставить("description", СтруктураОписанияОшибки.Описание); 
		
		Ответ = СтруктураОшибок;
		
	КонецЕсли;
	
	Возврат Ответ;


КонецФункции

Функция Ping() Экспорт
	
	СтруктураДанных = Новый Структура;
	
	СтруктураДанных.Вставить("is_success", Истина);  
	
	Возврат ПодготовитьОтветJSON(СтруктураДанных);

КонецФункции

Функция GetVersion() Экспорт
	
	СтруктураДанных = Новый Структура;
	
	СтруктураДанных.Вставить("data", "1.0");  
	
	Возврат ПодготовитьОтветJSON(СтруктураДанных);

КонецФункции

Функция GetWareInfo(posId, code="", barcode="") Экспорт
	Ответ = Новый Структура;
	Ответ.Вставить("_success",Ложь);
	//TODO:
	//проверка posId
	ДанныеШтрихкода = Новый Массив;
	ДанныеШтрихкода.Добавить(Новый Структура("Штрихкод",barcode));
	
	Ном = Справочники.Номенклатура.ПустаяСсылка();
	
	Если ЗначениеЗаполнено(code) Тогда
		Ном = Справочники.Номенклатура.НайтиПоКоду(code);
		Если Не ЗначениеЗаполнено(Ном) И ЗначениеЗаполнено(barcode) Тогда
			СписокНоменклатуры = Штрихкодирование.НайтиТоварПоШтрихкоду(ДанныеШтрихкода).НайденныеТовары;
			Если СписокНоменклатуры.Количество() > 0 Тогда
				Ном = СписокНоменклатуры[0].Номенклатура;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(barcode) Тогда
		СписокНоменклатуры = Штрихкодирование.НайтиТоварПоШтрихкоду(ДанныеШтрихкода).НайденныеТовары;
		Если СписокНоменклатуры.Количество() > 0 Тогда
			Ном = СписокНоменклатуры[0].Номенклатура;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Ном) Тогда
		Ответ = Новый Структура;
		Ответ.Вставить("name",Ном.Наименование);
		Ответ.Вставить("fullName",Ном.НаименованиеПолное);
		Ответ.Вставить("code",Ном.Код);
		Ответ.Вставить("art",Ном.Артикул);
		Ответ.Вставить("_success",Истина);
	КонецЕсли;
	
	Возврат Ответ;
КонецФункции

Функция GetWareRest(posId, code, barcode, guid) Экспорт
	Ответ = Новый Структура;
	Ответ.Вставить("_success",Ложь);
	//TODO:
	//проверка posId
	ДанныеШтрихкода = Новый Массив;
	ДанныеШтрихкода.Добавить(Новый Структура("Штрихкод",barcode));
	
	Если ЗначениеЗаполнено(guid) Тогда
		Ном = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(guid));
	ИначеЕсли ЗначениеЗаполнено(code) Тогда
		Ном = Справочники.Номенклатура.НайтиПоКоду(code);
		Если Не ЗначениеЗаполнено(Ном) И ЗначениеЗаполнено(barcode) Тогда
			СписокНоменклатуры = Штрихкодирование.НайтиТоварПоШтрихкоду(ДанныеШтрихкода).НайденныеТовары;
			Если СписокНоменклатуры.Количество() > 0 Тогда
				Ном = СписокНоменклатуры[0].Номенклатура;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(barcode) Тогда
		СписокНоменклатуры = Штрихкодирование.НайтиТоварПоШтрихкоду(ДанныеШтрихкода).НайденныеТовары;
		Если СписокНоменклатуры.Количество() > 0 Тогда
			Ном = СписокНоменклатуры[0].Номенклатура;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Ном) И Не Ном.ЭтоГруппа Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ОстаткиНоменклатурыОстатки.Склад.Наименование КАК warehouseName,
			|	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК rest,
			|	ОстаткиНоменклатурыОстатки.Склад.ТорговыйОбъект.Наименование КАК shopName
			|ИЗ
			|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(, Номенклатура = &Номенклатура) КАК ОстаткиНоменклатурыОстатки
			|
			|УПОРЯДОЧИТЬ ПО
			|	shopName";
		
		Запрос.УстановитьПараметр("Номенклатура", Ном);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если Не РезультатЗапроса.Пустой() Тогда
			data = ОбщегоНазначения.ТаблицаЗначенийВМассив(РезультатЗапроса.Выгрузить());
		Иначе
			data = Новый Массив();
			data.Добавить(Новый Структура("shopName,warehouseName,rest","","Всего",0));
		КонецЕсли;
		
		Ответ.Вставить("data",data);
		
		Ответ.Вставить("_success",Истина);
	КонецЕсли;
	
	Возврат Ответ;
КонецФункции


Функция GetWareList(posId, tree, code, barcode, partName, art) Экспорт
	Ответ = Новый Структура;
	Ответ.Вставить("_success",Ложь);
	//TODO:
	//проверка posId
		
	Если tree Тогда
		
		//TODO:
		//иерархия
	//ИначеЕсли ЗначениеЗаполнено(code) ИЛИ ЗначениеЗаполнено(barcode) ИЛИ ЗначениеЗаполнено(partName) Тогда
	Иначе
		УсловиеКод = "ИСТИНА";
		УсловиеАртикул = "ИСТИНА";
		УсловиеНаименование = "ИСТИНА";
		УсловиеШтрихкод = "ИСТИНА";
		
		Если ЗначениеЗаполнено(code) Тогда
			УсловиеКод = "НоменклатураСправочник.Код = " + Формат(code,"ЧГ=");
		КонецЕсли;
		Если ЗначениеЗаполнено(barcode) Тогда
			УсловиеШтрихкод = "ШтрихкодыНоменклатуры.Штрихкод ПОДОБНО ""%" + barcode + "%""";
		КонецЕсли;
		Если ЗначениеЗаполнено(art) Тогда
			УсловиеАртикул = "НоменклатураСправочник.Артикул ПОДОБНО ""%" + art + "%""";
		КонецЕсли;
		Если ЗначениеЗаполнено(partName) Тогда
			УсловиеНаименование = "(НоменклатураСправочник.Наименование ПОДОБНО ""%" + partName + "%"" ИЛИ НоменклатураСправочник.НаименованиеПолное ПОДОБНО ""%" + partName + "%"")";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(code) ИЛИ ЗначениеЗаполнено(barcode) ИЛИ ЗначениеЗаполнено(art) ИЛИ ЗначениеЗаполнено(partName) Тогда
			Отбор = "И " + УсловиеКод + " И " + УсловиеАртикул + " И " + УсловиеШтрихкод + " И " + УсловиеНаименование;
		КонецЕсли;
		
		КатегорияЦен = Справочники.КатегорииЦен.НайтиПоКоду("000000002");
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	НоменклатураСправочник.Ссылка КАК Ссылка,
			|	ЦеныНоменклатурыСрезПоследних.Цена КАК price0,
			|	ВЫРАЗИТЬ("""" КАК СТРОКА(36)) КАК GUID,
			|	НоменклатураСправочник.Наименование КАК name,
			|	НоменклатураСправочник.НаименованиеПолное КАК fullName,
			|	НоменклатураСправочник.Код КАК code,
			|	НоменклатураСправочник.Артикул КАК art,
			|   ВЫРАЗИТЬ("""" КАК СТРОКА(36)) КАК price
			|ИЗ
			|	Справочник.Номенклатура КАК НоменклатураСправочник
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
			|		ПО НоменклатураСправочник.Ссылка = ШтрихкодыНоменклатуры.Номенклатура
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, КатегорияЦен = &КатегорияЦен) КАК ЦеныНоменклатурыСрезПоследних
			|		ПО ЦеныНоменклатурыСрезПоследних.Номенклатура = НоменклатураСправочник.Ссылка
			|ГДЕ
			|	НЕ НоменклатураСправочник.Ссылка.ЭтоГруппа
			|	И НЕ НоменклатураСправочник.Ссылка.ПометкаУдаления
			|	И НоменклатураСправочник.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНоменклатуры.ВРаботе)
			|" + Отбор + "
			|УПОРЯДОЧИТЬ ПО
			|	name";
		
		Запрос.УстановитьПараметр("КатегорияЦен",КатегорияЦен);
		РезультатЗапроса = Запрос.Выполнить();
		
		Если Не РезультатЗапроса.Пустой() Тогда
			data = ОбщегоНазначения.ТаблицаЗначенийВМассив(РезультатЗапроса.Выгрузить());
		Иначе
			data = Новый Массив();
			data.Добавить(Новый Структура("shopName,warehouseName,rest","","Всего",0));
		КонецЕсли;
		
		Если Не РезультатЗапроса.Пустой() Тогда
			РезультатТЗ = РезультатЗапроса.Выгрузить();
			Для Каждого Строка Из РезультатТЗ Цикл
				Строка.GUID = Строка(Строка.Ссылка.УникальныйИдентификатор());
				Строка.price = Формат(Строка.price0,"ЧДЦ=2;");
			КонецЦикла;
			РезультатТЗ.Колонки.Удалить(1);
			РезультатТЗ.Колонки.Удалить(0);
			data = ОбщегоНазначения.ТаблицаЗначенийВМассив(РезультатТЗ);
			Ответ.Вставить("data",data);
		
			Ответ.Вставить("_success",Истина);
		
		Иначе
			Ответ.Вставить("_success",Ложь);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Ответ;
КонецФункции

